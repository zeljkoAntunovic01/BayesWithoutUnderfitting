/zhome/4c/1/203176/BayesWithoutUnderfitting/experiments.py:140: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(MNIST_MODEL_PATH))
ðŸ”„ Precomputing GGN eigenvectors...
âœ… Precomputation complete.
Time taken for precomputation: 67.51 seconds
Sample 0: Final Proj Norm = 1.2477e+03 | Final Kernel Ratio = 1.1598e-01
Sample 1: Final Proj Norm = 1.2491e+03 | Final Kernel Ratio = 1.5154e-01
Sample 2: Final Proj Norm = 1.2476e+03 | Final Kernel Ratio = 1.2276e-01
Sample 3: Final Proj Norm = 1.2488e+03 | Final Kernel Ratio = 1.1994e-01
Sample 4: Final Proj Norm = 1.2493e+03 | Final Kernel Ratio = 1.1595e-01
Calculating optimal alpha...
Trace of projection: 1.5581e+06
Optimal alpha: 0.0507
Sample 0 Difference from MAP: 5541.0029296875
Sample 1 Difference from MAP: 5547.3310546875
Sample 2 Difference from MAP: 5540.6279296875
Sample 3 Difference from MAP: 5545.70703125
Sample 4 Difference from MAP: 5548.13623046875
Accuracy (MAP Model): 0.9919
Accuracy (Bayesian Mean Model): 0.0956
NLL (Bayesian Model): 11.4574
NLL (MAP Model): 0.0266
ECE (Bayesian Model): 0.2709
ECE (MAP Model): 0.0028
